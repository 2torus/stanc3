$ ./../stanc.exe examples-bad/assign_real_to_int.stan
Semantic error at file "examples-bad/assign_real_to_int.stan", line 11, characters 2-9:
Ill-typed arguments supplied to assignment operator <-: lhs has type int and rhs has type real

$ ./../stanc.exe examples-bad/bad_prob_fun_suffix.stan
Semantic error at file "examples-bad/bad_prob_fun_suffix.stan", line 10, characters 2-19:
Ill-typed arguments to '~' statement. No distribution was found with the correct signature.

$ ./../stanc.exe examples-bad/bad_var_assignment_type1.stan
Semantic error at file "examples-bad/bad_var_assignment_type1.stan", line 4, characters 2-9:
Ill-typed arguments supplied to assignment operator <-: lhs has type real[] and rhs has type vector

$ ./../stanc.exe examples-bad/bad_var_assignment_type2.stan
Semantic error at file "examples-bad/bad_var_assignment_type2.stan", line 6, characters 2-9:
Ill-typed arguments supplied to assignment operator <-: lhs has type real[] and rhs has type real[][]

$ ./../stanc.exe examples-bad/bad_var_assignment_vec_arr.stan
Semantic error at file "examples-bad/bad_var_assignment_vec_arr.stan", line 10, characters 2-36:
Ill-typed arguments supplied to assignment operator <-: lhs has type real[] and rhs has type vector

$ ./../stanc.exe examples-bad/bad_while.stan
Syntax error at file "examples-bad/bad_while.stan", line 3, characters 24-25, parsing error:
 >   cholesky_factor_corr[x~normal(0,1)] y;
Expected "[" expression "]" for size of cholesky_factor_corr.


$ ./../stanc.exe examples-bad/binomial_coefficient_sample.stan
Semantic error at file "examples-bad/binomial_coefficient_sample.stan", line 5, characters 2-30:
Ill-typed arguments to '~' statement. No distribution was found with the correct signature.

$ ./../stanc.exe examples-bad/break1.stan
Semantic error at file "examples-bad/break1.stan", line 4, characters 2-8:
Break statements may only be used in loops.

$ ./../stanc.exe examples-bad/break2.stan
Semantic error at file "examples-bad/break2.stan", line 4, characters 2-8:
Break statements may only be used in loops.

$ ./../stanc.exe examples-bad/break3.stan
Semantic error at file "examples-bad/break3.stan", line 6, characters 2-8:
Break statements may only be used in loops.

$ ./../stanc.exe examples-bad/break4.stan
Semantic error at file "examples-bad/break4.stan", line 6, characters 2-8:
Break statements may only be used in loops.

$ ./../stanc.exe examples-bad/break5.stan
Semantic error at file "examples-bad/break5.stan", line 4, characters 4-10:
Break statements may only be used in loops.

$ ./../stanc.exe examples-bad/break6.stan
Semantic error at file "examples-bad/break6.stan", line 7, characters 4-10:
Break statements may only be used in loops.

$ ./../stanc.exe examples-bad/break7.stan
Semantic error at file "examples-bad/break7.stan", line 10, characters 4-10:
Break statements may only be used in loops.

$ ./../stanc.exe examples-bad/break8.stan
Semantic error at file "examples-bad/break8.stan", line 12, characters 4-10:
Break statements may only be used in loops.

$ ./../stanc.exe examples-bad/ccdf-sample.stan
Semantic error at file "examples-bad/ccdf-sample.stan", line 5, characters 2-24:
CDF and CCDF functions may not be used with sampling notation. Use increment_log_prob(weibull_ccdf_log(...)) instead.

$ ./../stanc.exe examples-bad/cdf-sample.stan
Semantic error at file "examples-bad/cdf-sample.stan", line 5, characters 2-23:
CDF and CCDF functions may not be used with sampling notation. Use increment_log_prob(normal_cdf_log(...)) instead.

$ ./../stanc.exe examples-bad/conditional_condition_bad_1.stan
Semantic error at file "examples-bad/conditional_condition_bad_1.stan", line 6, characters 2-61:
Condition in conditional needs to be of type int or real. Instead found type vector.

$ ./../stanc.exe examples-bad/conditional_condition_bad_2.stan
Semantic error at file "examples-bad/conditional_condition_bad_2.stan", line 9, characters 7-62:
Condition in conditional needs to be of type int or real. Instead found type vector.

$ ./../stanc.exe examples-bad/continue1.stan
Semantic error at file "examples-bad/continue1.stan", line 4, characters 2-11:
Continue statements may only be used in loops.

$ ./../stanc.exe examples-bad/continue2.stan
Semantic error at file "examples-bad/continue2.stan", line 4, characters 2-11:
Continue statements may only be used in loops.

$ ./../stanc.exe examples-bad/continue3.stan
Semantic error at file "examples-bad/continue3.stan", line 6, characters 2-11:
Continue statements may only be used in loops.

$ ./../stanc.exe examples-bad/continue4.stan
Semantic error at file "examples-bad/continue4.stan", line 6, characters 2-11:
Continue statements may only be used in loops.

$ ./../stanc.exe examples-bad/continue5.stan
Semantic error at file "examples-bad/continue5.stan", line 4, characters 4-13:
Continue statements may only be used in loops.

$ ./../stanc.exe examples-bad/declare-define-param-block.stan
Syntax error at file "examples-bad/declare-define-param-block.stan", line 6, characters 9-10, parsing error:
 >   real z = d_r;
Only top-level variable declarations are allowed in data and parameter blocks.


$ ./../stanc.exe examples-bad/declare-define-var-double-1.stan
Semantic error at file "examples-bad/declare-define-var-double-1.stan", line 5, characters 2-18:
Ill-typed arguments supplied to assignment operator =: lhs has type real and rhs has type real[]

$ ./../stanc.exe examples-bad/declare-define-var-double-2.stan
Semantic error at file "examples-bad/declare-define-var-double-2.stan", line 5, characters 2-23:
Ill-typed arguments supplied to assignment operator =: lhs has type vector and rhs has type real[]

$ ./../stanc.exe examples-bad/declare-define-var-double-3.stan
Syntax error at file "examples-bad/declare-define-var-double-3.stan", line 3, characters 10-11, parsing error:
 >   real a2 = 1.0; // cannot assign in data block
Only top-level variable declarations are allowed in data and parameter blocks.


$ ./../stanc.exe examples-bad/declare-define-var-double-4.stan
Syntax error at file "examples-bad/declare-define-var-double-4.stan", line 6, characters 10-11, parsing error:
 >   real a2 = 1.0; // cannot assign in parameters block
Only top-level variable declarations are allowed in data and parameter blocks.


$ ./../stanc.exe examples-bad/declare-define-var-int-1.stan
Semantic error at file "examples-bad/declare-define-var-int-1.stan", line 5, characters 2-17:
Ill-typed arguments supplied to assignment operator =: lhs has type int and rhs has type real

$ ./../stanc.exe examples-bad/declare-define-var-int-2.stan
Semantic error at file "examples-bad/declare-define-var-int-2.stan", line 5, characters 2-18:
Ill-typed arguments supplied to assignment operator =: lhs has type int and rhs has type real

$ ./../stanc.exe examples-bad/declare-define-var-int-3.stan
Semantic error at file "examples-bad/declare-define-var-int-3.stan", line 2, characters 2-19:
Ill-typed arguments supplied to assignment operator =: lhs has type int[] and rhs has type int

$ ./../stanc.exe examples-bad/declare-define-var-int-4.stan
Semantic error at file "examples-bad/declare-define-var-int-4.stan", line 5, characters 2-17:
Ill-typed arguments supplied to assignment operator =: lhs has type int and rhs has type int[]

$ ./../stanc.exe examples-bad/declare-define-var-matrix-1.stan
Semantic error at file "examples-bad/declare-define-var-matrix-1.stan", line 5, characters 2-23:
Ill-typed arguments supplied to assignment operator =: lhs has type vector and rhs has type matrix

$ ./../stanc.exe examples-bad/declare-define-var-vec-1.stan
Semantic error at file "examples-bad/declare-define-var-vec-1.stan", line 6, characters 2-23:
Ill-typed arguments supplied to assignment operator =: lhs has type vector and rhs has type row_vector

$ ./../stanc.exe examples-bad/err-bare-type-close-square.stan
Syntax error at file "examples-bad/err-bare-type-close-square.stan", line 2, characters 8-11, parsing error:
 >   real[ foo(int n) { return n; }
"[" (list of commas) "]" expected in unsized return type of function definition.


$ ./../stanc.exe examples-bad/err-close-block.stan
Syntax error at file "examples-bad/err-close-block.stan", line 3, characters 0-5, parsing error:
 > model {
Function forward declaration, definition or "}" expected after "functions {".


$ ./../stanc.exe examples-bad/err-close-function-args.stan
Syntax error at file "examples-bad/err-close-function-args.stan", line 2, characters 18-19, parsing error:
 >   real foo(real x {
"," or ")" expected after function argument declaration.


$ ./../stanc.exe examples-bad/err-decl-double-params.stan
Syntax error at file "examples-bad/err-decl-double-params.stan", line 4, characters 0-1, parsing error:
 > }
Ill-formed phrase. Found L-value. This can be completed in many ways.


$ ./../stanc.exe examples-bad/err-decl-double.stan
Syntax error at file "examples-bad/err-decl-double.stan", line 2, characters 2-8, parsing error:
 >   double y;
Expected top-level variable declaration or "}".


$ ./../stanc.exe examples-bad/err-decl-matrix-2.stan
Semantic error at file "examples-bad/err-decl-matrix-2.stan", line 2, characters 13-17:
Only expressions of array, matrix, row_vector and vector type may be indexed. Instead, found type int.

$ ./../stanc.exe examples-bad/err-decl-matrix.stan
Syntax error at file "examples-bad/err-decl-matrix.stan", line 2, characters 10-11, parsing error:
 >   matrix[3] y;
Expected "[" expression "," expression "]" for sizes of matrix.


$ ./../stanc.exe examples-bad/err-decl-no-expression.stan
Syntax error at file "examples-bad/err-decl-no-expression.stan", line 2, characters 13-14, parsing error:
 >   real<lower=> y;
An expression (not containing binary logical operators) is expected for type lower bound.


$ ./../stanc.exe examples-bad/err-decl-vector-2.stan
Syntax error at file "examples-bad/err-decl-vector-2.stan", line 2, characters 10-11, parsing error:
 >   vector[3,4] y;
"[" expression "]" expected for vector size.


$ ./../stanc.exe examples-bad/err-decl-vector.stan
Syntax error at file "examples-bad/err-decl-vector.stan", line 2, characters 9-10, parsing error:
 >   vector a[3];
"[" expression "]" expected for vector size.


$ ./../stanc.exe examples-bad/err-double-dims.stan
Semantic error at file "examples-bad/err-double-dims.stan", line 2, characters 9-12:
Array sizes should be of type int. Instead found type real.

$ ./../stanc.exe examples-bad/err-expected-bracket.stan
Syntax error at file "examples-bad/err-expected-bracket.stan", line 4, characters 0-0, parsing error:
Expected "{" after block keyword.


$ ./../stanc.exe examples-bad/err-expected-end-of-model.stan
Syntax error at file "examples-bad/err-expected-end-of-model.stan", line 3, characters 0-3, parsing error:
 > foo
Expected "generated quantities {" or end of file after end of model block.


$ ./../stanc.exe examples-bad/err-expected-generated.stan
Syntax error at file "examples-bad/err-expected-generated.stan", line 3, characters 0-9, parsing error:
 > generated {
Expected "generated quantities {" or end of file after end of model block.


$ ./../stanc.exe examples-bad/err-expected-model.stan
Syntax error at file "examples-bad/err-expected-model.stan", line 8, characters 0-5, parsing error:
 > model {
Expected end of file after end of generated quantities block.


$ ./../stanc.exe examples-bad/err-fun-bare-types-int.stan
Syntax error at file "examples-bad/err-fun-bare-types-int.stan", line 2, characters 7-8, parsing error:
 >   real[3] foo() { 
"[" (list of commas) "]" expected in unsized return type of function definition.


$ ./../stanc.exe examples-bad/err-if-else-double-else.stan
Syntax error at file "examples-bad/err-if-else-double-else.stan", line 4, characters 2-6, parsing error:
 >   else y <- 3;
Expected top-level variable declaration, statement or "}".


$ ./../stanc.exe examples-bad/err-if-else-no-cond.stan
Syntax error at file "examples-bad/err-if-else-no-cond.stan", line 3, characters 6-7, parsing error:
 >   if () y <- 2;
Expected expression for test of conditional control flow construct.


$ ./../stanc.exe examples-bad/err-if-else.stan
Syntax error at file "examples-bad/err-if-else.stan", line 3, characters 8-9, parsing error:
 >   if (1 y <- 2;
Expected ")" after test expression of conditional control flow construct.


$ ./../stanc.exe examples-bad/err-incr-log-prob-scope.stan
Semantic error at file "examples-bad/err-incr-log-prob-scope.stan", line 4, characters 2-24:
Target can only be accessed in the model block or in definitions of functions with the suffix _lp.

$ ./../stanc.exe examples-bad/err-integrate-ode-comma.stan
Syntax error at file "examples-bad/err-integrate-ode-comma.stan", line 9, characters 46-51, parsing error:
 >   y = integrate_ode_rk45(foo,y0,t0,ts,theta,x x_int);
Ill-formed expression. Found identifier. There are many ways to complete this to a well-formed expression.


$ ./../stanc.exe examples-bad/err-minus-types.stan
Semantic error at file "examples-bad/err-minus-types.stan", line 4, characters 7-12:
Ill-typed arguments supplied to infix operator -. Available signatures: 
(real, matrix) => matrix
(real, row_vector) => row_vector
(real, vector) => vector
(matrix, real) => matrix
(row_vector, real) => row_vector
(vector, real) => vector
(matrix, matrix) => matrix
(row_vector, row_vector) => row_vector
(vector, vector) => vector
(real, real) => real
(int, int) => int
Instead supplied arguments of incompatible type: vector, matrix.

$ ./../stanc.exe examples-bad/err-nested-parens-close.stan
Syntax error at file "examples-bad/err-nested-parens-close.stan", line 3, characters 13-14, parsing error:
 >   x <- (2 + 3;
Expression or range of expressions followed by ")" expected after "(".


$ ./../stanc.exe examples-bad/err-nested-parens.stan
Syntax error at file "examples-bad/err-nested-parens.stan", line 3, characters 13-14, parsing error:
 >   x <- 2 + (());
Expression expected after "(".


$ ./../stanc.exe examples-bad/err-no-cond-else-if.stan
Syntax error at file "examples-bad/err-no-cond-else-if.stan", line 5, characters 12-13, parsing error:
 >   } else if {
"(" expression ")" expected after "if".


$ ./../stanc.exe examples-bad/err-no-cond.stan
Syntax error at file "examples-bad/err-no-cond.stan", line 3, characters 6-7, parsing error:
 >   if ()
Expected expression for test of conditional control flow construct.


$ ./../stanc.exe examples-bad/err-no-statement.stan
Syntax error at file "examples-bad/err-no-statement.stan", line 4, characters 0-1, parsing error:
 > }
Ill-formed statement. Statement expected for true branch of conditional. 


$ ./../stanc.exe examples-bad/err-non-int-dims.stan
Semantic error at file "examples-bad/err-non-int-dims.stan", line 4, characters 11-14:
Index should be of type int or int[] or should be a range. Instead found type real.

$ ./../stanc.exe examples-bad/err-open-block.stan
Syntax error at file "examples-bad/err-open-block.stan", line 1, characters 10-13, parsing error:
 > functions foo {
"{" expected after "functions".


$ ./../stanc.exe examples-bad/err-second-operand-plus.stan
Syntax error at file "examples-bad/err-second-operand-plus.stan", line 4, characters 0-1, parsing error:
 > }
Ill-formed expression. Found expression "||". Expect an expression next.


$ ./../stanc.exe examples-bad/err-transformed-params.stan
Syntax error at file "examples-bad/err-transformed-params.stan", line 4, characters 0-11, parsing error:
 > transformed {
"transformed parameters {", "model {" or "generated quantities {" expected after end of parameters block.


$ ./../stanc.exe examples-bad/expect_statement_seq_close_brace.stan
Syntax error at file "examples-bad/expect_statement_seq_close_brace.stan", line 6, characters 0-0, parsing error:
Variable declaration, statement or "}" expected.


$ ./../stanc.exe examples-bad/expect_statement_seq_close_brace_2.stan
Syntax error at file "examples-bad/expect_statement_seq_close_brace_2.stan", line 17, characters 0-0, parsing error:
Variable declaration, statement or "}" expected.


$ ./../stanc.exe examples-bad/expect_statement_seq_close_brace_3.stan
Syntax error at file "examples-bad/expect_statement_seq_close_brace_3.stan", line 8, characters 0-10, parsing error:
 > parameters {
Expected top-level variable declaration, statement or "}".


$ ./../stanc.exe examples-bad/expect_statement_seq_close_brace_4.stan
Syntax error at file "examples-bad/expect_statement_seq_close_brace_4.stan", line 10, characters 0-0, parsing error:
Expected top-level variable declaration, statement or "}".


$ ./../stanc.exe examples-bad/experiment.stan
Semantic error at file "examples-bad/experiment.stan", line 12, characters 4-11:
A non-returning function was expected but a returning function foo was supplied.

$ ./../stanc.exe examples-bad/functions-bad0.stan
Syntax error at file "examples-bad/functions-bad0.stan", line 2, characters 11-15, parsing error:
 >   real foo(void x) {
(Non-void) type expected function argument declaration.


$ ./../stanc.exe examples-bad/functions-bad1.stan
Semantic error at file "examples-bad/functions-bad1.stan", line 6, characters 7-11:
Identifier  flib  is already in use.

$ ./../stanc.exe examples-bad/functions-bad11.stan
Semantic error at file "examples-bad/functions-bad11.stan", line 3, characters 4-20:
Target can only be accessed in the model block or in definitions of functions with the suffix _lp.

$ ./../stanc.exe examples-bad/functions-bad12.stan
Semantic error at file "examples-bad/functions-bad12.stan", line 3, characters 4-42:
Target can only be accessed in the model block or in definitions of functions with the suffix _lp.

$ ./../stanc.exe examples-bad/functions-bad13.stan
Semantic error at file "examples-bad/functions-bad13.stan", line 3, characters 4-11:
Cannot assign to function argument or loop identifier x.

$ ./../stanc.exe examples-bad/functions-bad14.stan
Semantic error at file "examples-bad/functions-bad14.stan", line 5, characters 6-9:
Identifier  abc  is already in use.

$ ./../stanc.exe examples-bad/functions-bad15.stan
Semantic error at file "examples-bad/functions-bad15.stan", line 10, characters 21-38:
A returning function was expected but a non-returning function unit_normal_lp was supplied.

$ ./../stanc.exe examples-bad/functions-bad16.stan
Semantic error at file "examples-bad/functions-bad16.stan", line 2, characters 7-13:
Identifier  square  clashes with primitive.

$ ./../stanc.exe examples-bad/functions-bad17.stan
Semantic error at file "examples-bad/functions-bad17.stan", line 2, characters 2-54:
Real return type required for probability functions ending in _log, _lpdf, _lpmf, _lcdf, or _lccdf.

$ ./../stanc.exe examples-bad/functions-bad18.stan
Semantic error at file "examples-bad/functions-bad18.stan", line 7, characters 7-10:
Identifier  foo  is already in use.

$ ./../stanc.exe examples-bad/functions-bad19.stan
Semantic error at file "examples-bad/functions-bad19.stan", line 4, characters 2-46:
Function my_fun3 has already been declared to have type (data real) => real

$ ./../stanc.exe examples-bad/functions-bad2.stan
Semantic error at file "examples-bad/functions-bad2.stan", line 2, characters 2-22:
Some function is declared without specifying a definition.

$ ./../stanc.exe examples-bad/functions-bad20.stan
Semantic error at file "examples-bad/functions-bad20.stan", line 4, characters 2-51:
Function my_fun3 has already been declared to have type (real) => real

$ ./../stanc.exe examples-bad/functions-bad21.stan
Semantic error at file "examples-bad/functions-bad21.stan", line 13, characters 11-21:
Ill-typed arguments supplied to function my_fun3. Available signatures:
(data real) => real
Instead supplied arguments of incompatible type: real.

$ ./../stanc.exe examples-bad/functions-bad22-ode.stan
Semantic error at file "examples-bad/functions-bad22-ode.stan", line 15, characters 11-82:
Ill-typed arguments supplied to function integrate_ode_rk45. Available signatures: 
((real, real[], real[], data real[], data int[]) => real[], real[], data real, data real[], real[], data real[], data int[], data real, data real, data real) => real[][]
((real, real[], real[], data real[], data int[]) => real[], real[], data real, data real[], real[], data real[], data int[]) => real[][]
Instead supplied arguments of incompatible type: (real, real[], real[], real[], int[]) => real[], real[], real, real[], real[], real[], int[].

$ ./../stanc.exe examples-bad/functions-bad23.stan
Semantic error at file "examples-bad/functions-bad23.stan", line 3, characters 4-11:
Void return statements may only be used inside non-returning function definitions.

$ ./../stanc.exe examples-bad/functions-bad24.stan
Semantic error at file "examples-bad/functions-bad24.stan", line 3, characters 4-13:
Expression return statements may only be used inside returning function definitions.

$ ./../stanc.exe examples-bad/functions-bad25.stan
Syntax error at file "examples-bad/functions-bad25.stan", line 5, characters 2-3, parsing error:
 >   }
Expression or ";" expected after "return".


$ ./../stanc.exe examples-bad/functions-bad26.stan
Syntax error at file "examples-bad/functions-bad26.stan", line 5, characters 2-3, parsing error:
 >   }
Ill-formed expression. Expression or ";" expected after "return".


$ ./../stanc.exe examples-bad/functions-bad3.stan
Syntax error at file "examples-bad/functions-bad3.stan", line 2, characters 10-11, parsing error:
 >   real foo^3(real x) {
"(" expected after function name.


$ ./../stanc.exe examples-bad/functions-bad4.stan
Semantic error at file "examples-bad/functions-bad4.stan", line 10, characters 2-9:
A non-returning function was expected but a returning function bar was supplied.

$ ./../stanc.exe examples-bad/functions-bad5.stan
Semantic error at file "examples-bad/functions-bad5.stan", line 11, characters 7-13:
A returning function was expected but a non-returning function baz was supplied.

$ ./../stanc.exe examples-bad/functions-bad6.stan
Semantic error at file "examples-bad/functions-bad6.stan", line 8, characters 7-18:
Target can only be accessed in the model block or in definitions of functions with the suffix _lp.

$ ./../stanc.exe examples-bad/functions-bad7.stan
Semantic error at file "examples-bad/functions-bad7.stan", line 14, characters 7-21:
Target can only be accessed in the model block or in definitions of functions with the suffix _lp.

$ ./../stanc.exe examples-bad/get-lp-target-data.stan
Semantic error at file "examples-bad/get-lp-target-data.stan", line 2, characters 19-27:
Target can only be accessed in the model block or in definitions of functions with the suffix _lp.

$ ./../stanc.exe examples-bad/get_lp_bad_scope1.stan
Semantic error at file "examples-bad/get_lp_bad_scope1.stan", line 3, characters 7-15:
Target can only be accessed in the model block or in definitions of functions with the suffix _lp.

$ ./../stanc.exe examples-bad/get_lp_bad_scope2.stan
Semantic error at file "examples-bad/get_lp_bad_scope2.stan", line 3, characters 15-23:
Target can only be accessed in the model block or in definitions of functions with the suffix _lp.

$ ./../stanc.exe examples-bad/local_var_constraint.stan
Syntax error at file "examples-bad/local_var_constraint.stan", line 5, characters 12-13, parsing error:
 >   row_vector<lower=0,upper=1>[3] a[3];
"[" expression"]" expected after "row_vector" in local (or model block) variable declaration. (No transformations/constraints allowed.)


$ ./../stanc.exe examples-bad/local_var_constraint2.stan
Syntax error at file "examples-bad/local_var_constraint2.stan", line 5, characters 8-9, parsing error:
 >   vector<lower=0,upper=1>[3] a[3];
"[" expression  "]" expected after "vector" in local (or model block) variable declaration. (No transformations/constraints allowed.)


$ ./../stanc.exe examples-bad/local_var_constraint3.stan
Syntax error at file "examples-bad/local_var_constraint3.stan", line 5, characters 8-9, parsing error:
 >   matrix<lower=0,upper=1>[3,4] a[5];
"[" expression "," expression "]" expected after "matrix" in local (or model block) variable declaration. (No transformations/constraints allowed.)


$ ./../stanc.exe examples-bad/local_var_constraint4.stan
Syntax error at file "examples-bad/local_var_constraint4.stan", line 5, characters 6-7, parsing error:
 >   real<lower=0,upper=1> a;
Identifier expected after sized type in local (or model block) variable declaration. (No transformations/constraints allowed.)


$ ./../stanc.exe examples-bad/lp-error.stan
Semantic error at file "examples-bad/lp-error.stan", line 5, characters 2-6:
Identifier lp__ clashes with reserved keyword.

$ ./../stanc.exe examples-bad/matrix_expr_bad1.stan
Semantic error at file "examples-bad/matrix_expr_bad1.stan", line 2, characters 2-34:
Ill-typed arguments supplied to assignment operator =: lhs has type matrix and rhs has type row_vector

$ ./../stanc.exe examples-bad/matrix_expr_bad2.stan
Semantic error at file "examples-bad/matrix_expr_bad2.stan", line 2, characters 25-37:
Row_vector expression should have all int and real entries or all row_vector entries.

$ ./../stanc.exe examples-bad/matrix_expr_bad3.stan
Syntax error at file "examples-bad/matrix_expr_bad3.stan", line 2, characters 38-39, parsing error:
 >   matrix[3,2] td_mat32 = [ [ [ 1 ] ] ], [ [ 2 ] ] ];
Ill-formed expression. Expression followed by ";" expected after "=".


$ ./../stanc.exe examples-bad/matrix_expr_bad4.stan
Syntax error at file "examples-bad/matrix_expr_bad4.stan", line 2, characters 44-45, parsing error:
 >   matrix[3,2] td_mat32 = [ [ 1 , [ [ 2 ] ] ];
Ill-formed phrase. Found an expression. This can be followed by a ",", a "}", a ")", a "]", a "[" or an infix or postfix operator.


$ ./../stanc.exe examples-bad/matrix_expr_bad5.stan
Syntax error at file "examples-bad/matrix_expr_bad5.stan", line 2, characters 29-30, parsing error:
 >   matrix[3,2] td_mat32 = [ [ ] ];
Comma separated list of expressions followed by "]" expected after "[".


$ ./../stanc.exe examples-bad/multi_fun.stan
Semantic error at file "examples-bad/multi_fun.stan", line 5, characters 7-10:
Identifier  foo  is already in use.

$ ./../stanc.exe examples-bad/multiply_sample.stan
Semantic error at file "examples-bad/multiply_sample.stan", line 5, characters 2-18:
Ill-typed arguments to '~' statement. No distribution was found with the correct signature.

$ ./../stanc.exe examples-bad/oneline-error.stan
Syntax error at file "examples-bad/oneline-error.stan", line 1, characters 20-21, parsing error:
 > parameters { vector y[10]; } model { }
"[" expression "]" expected for vector size.


$ ./../stanc.exe examples-bad/op_addition_bad.stan
Semantic error at file "examples-bad/op_addition_bad.stan", line 7, characters 7-12:
Ill-typed arguments supplied to infix operator +. Available signatures: 
(real, matrix) => matrix
(real, row_vector) => row_vector
(real, vector) => vector
(matrix, real) => matrix
(row_vector, real) => row_vector
(vector, real) => vector
(matrix, matrix) => matrix
(row_vector, row_vector) => row_vector
(vector, vector) => vector
(real, real) => real
(int, int) => int
Instead supplied arguments of incompatible type: matrix, vector.

$ ./../stanc.exe examples-bad/op_divide_bad.stan
Semantic error at file "examples-bad/op_divide_bad.stan", line 7, characters 7-12:
Ill-typed arguments supplied to infix operator /. Available signatures: 
(matrix, matrix) => matrix
(row_vector, matrix) => row_vector

(matrix, real) => matrix
(row_vector, real) => row_vector
(vector, real) => vector
(real, real) => real
(int, int) => int
Instead supplied arguments of incompatible type: int[], matrix.

$ ./../stanc.exe examples-bad/op_divide_right_bad.stan
Semantic error at file "examples-bad/op_divide_right_bad.stan", line 7, characters 7-12:
Ill-typed arguments supplied to infix operator /. Available signatures: 
(matrix, matrix) => matrix
(row_vector, matrix) => row_vector

(matrix, real) => matrix
(row_vector, real) => row_vector
(vector, real) => vector
(real, real) => real
(int, int) => int
Instead supplied arguments of incompatible type: int[], matrix.

$ ./../stanc.exe examples-bad/op_elt_divide_bad.stan
Semantic error at file "examples-bad/op_elt_divide_bad.stan", line 7, characters 7-13:
Ill-typed arguments supplied to infix operator ./. Available signatures: 
(real, matrix) => matrix
(real, row_vector) => row_vector
(real, vector) => vector
(matrix, real) => matrix
(row_vector, real) => row_vector
(vector, real) => vector
(matrix, matrix) => matrix
(row_vector, row_vector) => row_vector
(vector, vector) => vector
Instead supplied arguments of incompatible type: int[], matrix.

$ ./../stanc.exe examples-bad/op_elt_multiply_bad.stan
Semantic error at file "examples-bad/op_elt_multiply_bad.stan", line 7, characters 7-13:
Ill-typed arguments supplied to infix operator .*. Available signatures: 
(matrix, matrix) => matrix
(row_vector, row_vector) => row_vector
(vector, vector) => vector
Instead supplied arguments of incompatible type: int[], matrix.

$ ./../stanc.exe examples-bad/op_logical_negation_bad.stan
Semantic error at file "examples-bad/op_logical_negation_bad.stan", line 7, characters 7-9:
Ill-typed arguments supplied to prefix operator !. Available signatures: 
(real) => int
(int) => int
Instead supplied argument of incompatible type: int[].

$ ./../stanc.exe examples-bad/op_mdivide_left_bad.stan
Semantic error at file "examples-bad/op_mdivide_left_bad.stan", line 7, characters 7-12:
Ill-typed arguments supplied to infix operator \. Available signatures: 
(matrix, matrix) => matrix
(matrix, vector) => vector
Instead supplied arguments of incompatible type: int[], matrix.

$ ./../stanc.exe examples-bad/op_minus_bad.stan
Semantic error at file "examples-bad/op_minus_bad.stan", line 7, characters 7-9:
Ill-typed arguments supplied to prefix operator -. Available signatures: 
(matrix) => matrix
(row_vector) => row_vector
(vector) => vector
(real) => real
(int) => int
Instead supplied argument of incompatible type: int[].

$ ./../stanc.exe examples-bad/op_modulus_bad.stan
Semantic error at file "examples-bad/op_modulus_bad.stan", line 7, characters 7-12:
Ill-typed arguments supplied to infix operator %. Available signatures: 
(int, int) => int
Instead supplied arguments of incompatible type: int[], matrix.

$ ./../stanc.exe examples-bad/op_multiplication_bad.stan
Semantic error at file "examples-bad/op_multiplication_bad.stan", line 7, characters 7-12:
Ill-typed arguments supplied to infix operator *. Available signatures: 
(real, matrix) => matrix
(real, row_vector) => row_vector
(real, vector) => vector
(matrix, matrix) => matrix
(row_vector, matrix) => row_vector
(matrix, vector) => vector
(vector, row_vector) => matrix
(row_vector, vector) => real
(matrix, real) => matrix
(row_vector, real) => row_vector
(vector, real) => vector
(real, real) => real
(int, int) => int
Instead supplied arguments of incompatible type: int[], matrix.

$ ./../stanc.exe examples-bad/op_subtraction_bad.stan
Semantic error at file "examples-bad/op_subtraction_bad.stan", line 7, characters 7-12:
Ill-typed arguments supplied to infix operator -. Available signatures: 
(real, matrix) => matrix
(real, row_vector) => row_vector
(real, vector) => vector
(matrix, real) => matrix
(row_vector, real) => row_vector
(vector, real) => vector
(matrix, matrix) => matrix
(row_vector, row_vector) => row_vector
(vector, vector) => vector
(real, real) => real
(int, int) => int
Instead supplied arguments of incompatible type: vector, matrix.

$ ./../stanc.exe examples-bad/op_transpose_bad.stan
Semantic error at file "examples-bad/op_transpose_bad.stan", line 7, characters 7-9:
Ill-typed arguments supplied to postfix operator '. Available signatures: 
(matrix) => matrix
(row_vector) => vector
(vector) => row_vector
Instead supplied argument of incompatible type: int[].

$ ./../stanc.exe examples-bad/print-void.stan
Semantic error at file "examples-bad/print-void.stan", line 8, characters 8-14:
A returning function was expected but a non-returning function foo was supplied.

$ ./../stanc.exe examples-bad/prob-fun-args-no-bar.stan
Semantic error at file "examples-bad/prob-fun-args-no-bar.stan", line 5, characters 12-32:
Probabilty functions with suffixes _lpdf, _lpmf, _lcdf, and _lccdf, require a vertical bar (|) between the first two arguments.

$ ./../stanc.exe examples-bad/prob-poisson_log-trunc-both.stan
Semantic error at file "examples-bad/prob-poisson_log-trunc-both.stan", line 11, characters 2-33:
Truncation is only defined if distribution has _lcdf and _lccdf functions implemented.

$ ./../stanc.exe examples-bad/prob-poisson_log-trunc-high.stan
Semantic error at file "examples-bad/prob-poisson_log-trunc-high.stan", line 11, characters 2-32:
Truncation is only defined if distribution has _lcdf and _lccdf functions implemented.

$ ./../stanc.exe examples-bad/prob-poisson_log-trunc-low.stan
Semantic error at file "examples-bad/prob-poisson_log-trunc-low.stan", line 11, characters 2-32:
Truncation is only defined if distribution has _lcdf and _lccdf functions implemented.

$ ./../stanc.exe examples-bad/real-pdf.stan
Semantic error at file "examples-bad/real-pdf.stan", line 2, characters 2-67:
Probability density functions require real variates (first argument). Instead found type int.

$ ./../stanc.exe examples-bad/real-pmf.stan
Semantic error at file "examples-bad/real-pmf.stan", line 2, characters 2-68:
Probability mass functions require integer variates (first argument). Instead found type real.

$ ./../stanc.exe examples-bad/real_idx.stan
Semantic error at file "examples-bad/real_idx.stan", line 3, characters 4-7:
Index should be of type int or int[] or should be a range. Instead found type real.

$ ./../stanc.exe examples-bad/redefine-ccdf1.stan
Semantic error at file "examples-bad/redefine-ccdf1.stan", line 2, characters 7-23:
Identifier  poisson_ccdf_log  clashes with primitive.

$ ./../stanc.exe examples-bad/redefine-ccdf2.stan
Semantic error at file "examples-bad/redefine-ccdf2.stan", line 2, characters 7-20:
Identifier  poisson_lccdf  clashes with primitive.

$ ./../stanc.exe examples-bad/redefine-ccdf3.stan
Semantic error at file "examples-bad/redefine-ccdf3.stan", line 5, characters 7-19:
Identifier  foo_lccdf  is already in use.

$ ./../stanc.exe examples-bad/redefine-cdf1.stan
Semantic error at file "examples-bad/redefine-cdf1.stan", line 2, characters 7-22:
Identifier  poisson_cdf_log  clashes with primitive.

$ ./../stanc.exe examples-bad/redefine-cdf2.stan
Semantic error at file "examples-bad/redefine-cdf2.stan", line 2, characters 7-19:
Identifier  poisson_lcdf  clashes with primitive.

$ ./../stanc.exe examples-bad/redefine-cdf3.stan
Semantic error at file "examples-bad/redefine-cdf3.stan", line 5, characters 7-18:
Identifier  foo_lcdf  is already in use.

$ ./../stanc.exe examples-bad/redefine-prob1.stan
Semantic error at file "examples-bad/redefine-prob1.stan", line 2, characters 7-19:
Identifier  poisson_lpmf  clashes with primitive.

$ ./../stanc.exe examples-bad/redefine-prob2.stan
Semantic error at file "examples-bad/redefine-prob2.stan", line 2, characters 7-19:
Identifier  poisson_lpmf  clashes with primitive.

$ ./../stanc.exe examples-bad/redefine-prob3.stan
Semantic error at file "examples-bad/redefine-prob3.stan", line 5, characters 7-15:
Identifier  foo_log  is already in use.

$ ./../stanc.exe examples-bad/rng_loc1.stan
Semantic error at file "examples-bad/rng_loc1.stan", line 3, characters 11-29:
Random number generators only allowed in transformed data block, generated quantities block or user-defined functions with names ending in _rng.

$ ./../stanc.exe examples-bad/rng_loc2.stan
Semantic error at file "examples-bad/rng_loc2.stan", line 3, characters 11-29:
Random number generators only allowed in transformed data block, generated quantities block or user-defined functions with names ending in _rng.

$ ./../stanc.exe examples-bad/rng_loc3.stan
Semantic error at file "examples-bad/rng_loc3.stan", line 3, characters 11-29:
Random number generators only allowed in transformed data block, generated quantities block or user-defined functions with names ending in _rng.

$ ./../stanc.exe examples-bad/rng_loc4.stan
Semantic error at file "examples-bad/rng_loc4.stan", line 3, characters 11-29:
Random number generators only allowed in transformed data block, generated quantities block or user-defined functions with names ending in _rng.

$ ./../stanc.exe examples-bad/rng_loc5.stan
Semantic error at file "examples-bad/rng_loc5.stan", line 6, characters 6-22:
Random number generators only allowed in transformed data block, generated quantities block or user-defined functions with names ending in _rng.

$ ./../stanc.exe examples-bad/rng_loc6.stan
Semantic error at file "examples-bad/rng_loc6.stan", line 6, characters 6-22:
Random number generators only allowed in transformed data block, generated quantities block or user-defined functions with names ending in _rng.

$ ./../stanc.exe examples-bad/row_vector_expr_bad1.stan
Semantic error at file "examples-bad/row_vector_expr_bad1.stan", line 4, characters 2-29:
Ill-typed arguments supplied to assignment operator =: lhs has type row_vector and rhs has type matrix

$ ./../stanc.exe examples-bad/row_vector_expr_bad2.stan
Semantic error at file "examples-bad/row_vector_expr_bad2.stan", line 5, characters 20-28:
Row_vector expression should have all int and real entries or all row_vector entries.

$ ./../stanc.exe examples-bad/row_vector_expr_bad3.stan
Syntax error at file "examples-bad/row_vector_expr_bad3.stan", line 2, characters 22-23, parsing error:
 >   row_vector[2] X = [ ];
Comma separated list of expressions followed by "]" expected after "[".


$ ./../stanc.exe examples-bad/signature_function_known.stan
Semantic error at file "examples-bad/signature_function_known.stan", line 8, characters 21-50:
Ill-typed arguments supplied to function bernoulli_logit_log. Available signatures: 
(int[], row_vector) => real
(int[], vector) => real
(int[], real[]) => real
(int[], real) => real
(int, row_vector) => real
(int, vector) => real
(int, real[]) => real
(int, real) => real
Instead supplied arguments of incompatible type: vector, vector.

$ ./../stanc.exe examples-bad/signature_function_unknown.stan
Semantic error at file "examples-bad/signature_function_unknown.stan", line 8, characters 21-45:
A returning function was expected but an undeclared identifier foo_whatev_log was supplied.

$ ./../stanc.exe examples-bad/signature_sampling_known.stan
Semantic error at file "examples-bad/signature_sampling_known.stan", line 8, characters 2-29:
Ill-typed arguments to '~' statement. No distribution was found with the correct signature.

$ ./../stanc.exe examples-bad/signature_sampling_unknown.stan
Semantic error at file "examples-bad/signature_sampling_unknown.stan", line 8, characters 2-24:
Ill-typed arguments to '~' statement. No distribution was found with the correct signature.

$ ./../stanc.exe examples-bad/stanc_helper.stan
Semantic error at file "examples-bad/stanc_helper.stan", line 5, characters 2-18:
Ill-typed arguments to '~' statement. No distribution was found with the correct signature.

$ ./../stanc.exe examples-bad/target-reserved.stan
Syntax error at file "examples-bad/target-reserved.stan", line 2, characters 7-13, parsing error:
 >   real target;
Identifier expected after type in top-level variable declaration.


$ ./../stanc.exe examples-bad/validate_add_expression_dimss_bad.stan
Semantic error at file "examples-bad/validate_add_expression_dimss_bad.stan", line 4, characters 7-14:
Only expressions of array, matrix, row_vector and vector type may be indexed. Instead, found type real.

$ ./../stanc.exe examples-bad/validate_add_var_bad1.stan
Semantic error at file "examples-bad/validate_add_var_bad1.stan", line 3, characters 7-8:
Identifier  x  is already in use.

$ ./../stanc.exe examples-bad/validate_add_var_bad2.stan
Semantic error at file "examples-bad/validate_add_var_bad2.stan", line 2, characters 2-8:
(Transformed) Parameters cannot be integers.

$ ./../stanc.exe examples-bad/validate_allow_sample_bad1.stan
Semantic error at file "examples-bad/validate_allow_sample_bad1.stan", line 3, characters 2-18:
Target can only be accessed in the model block or in definitions of functions with the suffix _lp.

$ ./../stanc.exe examples-bad/validate_allow_sample_bad2.stan
Semantic error at file "examples-bad/validate_allow_sample_bad2.stan", line 6, characters 2-18:
Target can only be accessed in the model block or in definitions of functions with the suffix _lp.

$ ./../stanc.exe examples-bad/validate_allow_sample_bad3.stan
Semantic error at file "examples-bad/validate_allow_sample_bad3.stan", line 9, characters 2-18:
Target can only be accessed in the model block or in definitions of functions with the suffix _lp.

$ ./../stanc.exe examples-bad/validate_array_expr_bad1.stan
Semantic error at file "examples-bad/validate_array_expr_bad1.stan", line 6, characters 2-41:
Ill-typed arguments supplied to assignment operator =: lhs has type int[] and rhs has type real[]

$ ./../stanc.exe examples-bad/validate_array_expr_bad2.stan
Semantic error at file "examples-bad/validate_array_expr_bad2.stan", line 6, characters 2-24:
Ill-typed arguments supplied to assignment operator =: lhs has type int[] and rhs has type int[][]

$ ./../stanc.exe examples-bad/validate_array_expr_bad3.stan
Syntax error at file "examples-bad/validate_array_expr_bad3.stan", line 6, characters 14-15, parsing error:
 >   int_1_a = { };  // cannot be empty
Expression expected after "{" in array expression.


$ ./../stanc.exe examples-bad/validate_array_expr_bad3a.stan
Syntax error at file "examples-bad/validate_array_expr_bad3a.stan", line 5, characters 30-31, parsing error:
 >   real loc_real_dim2[2,1] = {{},{}}; // cannot be empty
Expression expected after "{" in array expression.


$ ./../stanc.exe examples-bad/validate_conditional_op_bad-1.stan
Semantic error at file "examples-bad/validate_conditional_op_bad-1.stan", line 5, characters 7-19:
Ill-typed arguments supplied to ? : operator. Available signatures: 
(int, matrix[][][][][][][], matrix[][][][][][][]) => matrix[][][][][][][]
(int, row_vector[][][][][][][], row_vector[][][][][][][]) => row_vector[][][][][][][]
(int, vector[][][][][][][], vector[][][][][][][]) => vector[][][][][][][]
(int, int[][][][][][][], int[][][][][][][]) => int[][][][][][][]
(int, real[][][][][][][], real[][][][][][][]) => real[][][][][][][]
(int, matrix[][][][][][], matrix[][][][][][]) => matrix[][][][][][]
(int, row_vector[][][][][][], row_vector[][][][][][]) => row_vector[][][][][][]
(int, vector[][][][][][], vector[][][][][][]) => vector[][][][][][]
(int, int[][][][][][], int[][][][][][]) => int[][][][][][]
(int, real[][][][][][], real[][][][][][]) => real[][][][][][]
(int, matrix[][][][][], matrix[][][][][]) => matrix[][][][][]
(int, row_vector[][][][][], row_vector[][][][][]) => row_vector[][][][][]
(int, vector[][][][][], vector[][][][][]) => vector[][][][][]
(int, int[][][][][], int[][][][][]) => int[][][][][]
(int, real[][][][][], real[][][][][]) => real[][][][][]
(int, matrix[][][][], matrix[][][][]) => matrix[][][][]
(int, row_vector[][][][], row_vector[][][][]) => row_vector[][][][]
(int, vector[][][][], vector[][][][]) => vector[][][][]
(int, int[][][][], int[][][][]) => int[][][][]
(int, real[][][][], real[][][][]) => real[][][][]
(int, matrix[][][], matrix[][][]) => matrix[][][]
(int, row_vector[][][], row_vector[][][]) => row_vector[][][]
(int, vector[][][], vector[][][]) => vector[][][]
(int, int[][][], int[][][]) => int[][][]
(int, real[][][], real[][][]) => real[][][]
(int, matrix[][], matrix[][]) => matrix[][]
(int, row_vector[][], row_vector[][]) => row_vector[][]
(int, vector[][], vector[][]) => vector[][]
(int, int[][], int[][]) => int[][]
(int, real[][], real[][]) => real[][]
(int, matrix[], matrix[]) => matrix[]
(int, row_vector[], row_vector[]) => row_vector[]
(int, vector[], vector[]) => vector[]
(int, int[], int[]) => int[]
(int, real[], real[]) => real[]
(int, matrix, matrix) => matrix
(int, row_vector, row_vector) => row_vector
(int, vector, vector) => vector
(int, int, int) => int
(int, real, real) => real
Instead supplied arguments of incompatible type: row_vector[][], int, int.

$ ./../stanc.exe examples-bad/validate_conditional_op_bad-2.stan
Semantic error at file "examples-bad/validate_conditional_op_bad-2.stan", line 5, characters 7-20:
Ill-typed arguments supplied to ? : operator. Available signatures: 
(int, matrix[][][][][][][], matrix[][][][][][][]) => matrix[][][][][][][]
(int, row_vector[][][][][][][], row_vector[][][][][][][]) => row_vector[][][][][][][]
(int, vector[][][][][][][], vector[][][][][][][]) => vector[][][][][][][]
(int, int[][][][][][][], int[][][][][][][]) => int[][][][][][][]
(int, real[][][][][][][], real[][][][][][][]) => real[][][][][][][]
(int, matrix[][][][][][], matrix[][][][][][]) => matrix[][][][][][]
(int, row_vector[][][][][][], row_vector[][][][][][]) => row_vector[][][][][][]
(int, vector[][][][][][], vector[][][][][][]) => vector[][][][][][]
(int, int[][][][][][], int[][][][][][]) => int[][][][][][]
(int, real[][][][][][], real[][][][][][]) => real[][][][][][]
(int, matrix[][][][][], matrix[][][][][]) => matrix[][][][][]
(int, row_vector[][][][][], row_vector[][][][][]) => row_vector[][][][][]
(int, vector[][][][][], vector[][][][][]) => vector[][][][][]
(int, int[][][][][], int[][][][][]) => int[][][][][]
(int, real[][][][][], real[][][][][]) => real[][][][][]
(int, matrix[][][][], matrix[][][][]) => matrix[][][][]
(int, row_vector[][][][], row_vector[][][][]) => row_vector[][][][]
(int, vector[][][][], vector[][][][]) => vector[][][][]
(int, int[][][][], int[][][][]) => int[][][][]
(int, real[][][][], real[][][][]) => real[][][][]
(int, matrix[][][], matrix[][][]) => matrix[][][]
(int, row_vector[][][], row_vector[][][]) => row_vector[][][]
(int, vector[][][], vector[][][]) => vector[][][]
(int, int[][][], int[][][]) => int[][][]
(int, real[][][], real[][][]) => real[][][]
(int, matrix[][], matrix[][]) => matrix[][]
(int, row_vector[][], row_vector[][]) => row_vector[][]
(int, vector[][], vector[][]) => vector[][]
(int, int[][], int[][]) => int[][]
(int, real[][], real[][]) => real[][]
(int, matrix[], matrix[]) => matrix[]
(int, row_vector[], row_vector[]) => row_vector[]
(int, vector[], vector[]) => vector[]
(int, int[], int[]) => int[]
(int, real[], real[]) => real[]
(int, matrix, matrix) => matrix
(int, row_vector, row_vector) => row_vector
(int, vector, vector) => vector
(int, int, int) => int
(int, real, real) => real
Instead supplied arguments of incompatible type: int, real, row_vector[][].

$ ./../stanc.exe examples-bad/validate_exponentiation_bad.stan
Semantic error at file "examples-bad/validate_exponentiation_bad.stan", line 7, characters 2-13:
Ill-typed arguments supplied to assignment operator <-: lhs has type int and rhs has type real

$ ./../stanc.exe examples-bad/validate_int_expr2_bad1.stan
Semantic error at file "examples-bad/validate_int_expr2_bad1.stan", line 5, characters 16-17:
Identifier N not in scope.

$ ./../stanc.exe examples-bad/validate_int_expr2_bad2.stan
Semantic error at file "examples-bad/validate_int_expr2_bad2.stan", line 5, characters 2-40:
Upper bound of for-loop needs to be of type int. Instead found type real.

$ ./../stanc.exe examples-bad/validate_int_expr2_bad3.stan
Semantic error at file "examples-bad/validate_int_expr2_bad3.stan", line 2, characters 9-13:
Vector sizes should be of type int. Instead found type real.

$ ./../stanc.exe examples-bad/validate_int_expr2_bad4.stan
Semantic error at file "examples-bad/validate_int_expr2_bad4.stan", line 5, characters 2-40:
Upper bound of for-loop needs to be of type int. Instead found type real.

$ ./../stanc.exe examples-bad/validate_logical_negate_expr_bad.stan
Semantic error at file "examples-bad/validate_logical_negate_expr_bad.stan", line 3, characters 7-9:
Ill-typed arguments supplied to prefix operator !. Available signatures: 
(real) => int
(int) => int
Instead supplied argument of incompatible type: vector.

$ ./../stanc.exe examples-bad/validate_modulus_bad.stan
Semantic error at file "examples-bad/validate_modulus_bad.stan", line 7, characters 7-12:
Ill-typed arguments supplied to infix operator %. Available signatures: 
(int, int) => int
Instead supplied arguments of incompatible type: real, real.

$ ./../stanc.exe examples-bad/validate_set_double_locscale_bad1.stan
Semantic error at file "examples-bad/validate_set_double_locscale_bad1.stan", line 3, characters 16-19:
Location and scale should be of int or real type. Instead found type vector.

$ ./../stanc.exe examples-bad/validate_set_double_locscale_bad2.stan
Semantic error at file "examples-bad/validate_set_double_locscale_bad2.stan", line 3, characters 13-16:
Location and scale should be of int or real type. Instead found type vector.

$ ./../stanc.exe examples-bad/validate_set_double_locscale_bad3.stan
Syntax error at file "examples-bad/validate_set_double_locscale_bad3.stan", line 2, characters 15-20, parsing error:
 >   real<lower=1,scale=-31> a;
"upper =" expression (not containing binary logical operators) ">" expected after "<lower =" expression "," in top-level variable declaration.


$ ./../stanc.exe examples-bad/validate_set_double_range_lower_bad1.stan
Semantic error at file "examples-bad/validate_set_double_range_lower_bad1.stan", line 3, characters 13-14:
Lower bound should be of int or real type. Instead found type vector.

$ ./../stanc.exe examples-bad/validate_set_double_range_lower_bad2.stan
Semantic error at file "examples-bad/validate_set_double_range_lower_bad2.stan", line 3, characters 13-14:
Lower and upper bound should be of int or real type. Instead found type vector.

$ ./../stanc.exe examples-bad/validate_set_double_range_upper_bad1.stan
Semantic error at file "examples-bad/validate_set_double_range_upper_bad1.stan", line 3, characters 13-14:
Upper bound should be of int or real type. Instead found type vector.

$ ./../stanc.exe examples-bad/validate_set_double_range_upper_bad2.stan
Semantic error at file "examples-bad/validate_set_double_range_upper_bad2.stan", line 3, characters 23-24:
Lower and upper bound should be of int or real type. Instead found type vector.

$ ./../stanc.exe examples-bad/validate_set_int_range_lower_bad1.stan
Semantic error at file "examples-bad/validate_set_int_range_lower_bad1.stan", line 2, characters 2-19:
Bounds of integer variable should be of type int. Found type real.

$ ./../stanc.exe examples-bad/validate_set_int_range_lower_bad2.stan
Semantic error at file "examples-bad/validate_set_int_range_lower_bad2.stan", line 3, characters 2-27:
Bounds of integer variable should be of type int. Found type real.

$ ./../stanc.exe examples-bad/validate_set_int_range_lower_bad3.stan
Semantic error at file "examples-bad/validate_set_int_range_lower_bad3.stan", line 3, characters 2-27:
Bounds of integer variable should be of type int. Found type real.

$ ./../stanc.exe examples-bad/validate_set_int_range_upper_bad1.stan
Semantic error at file "examples-bad/validate_set_int_range_upper_bad1.stan", line 2, characters 2-19:
Bounds of integer variable should be of type int. Found type real.

$ ./../stanc.exe examples-bad/validate_set_int_range_upper_bad2.stan
Semantic error at file "examples-bad/validate_set_int_range_upper_bad2.stan", line 3, characters 2-27:
Bounds of integer variable should be of type int. Found type real.

$ ./../stanc.exe examples-bad/validate_validate_int_expr_bad1.stan
Semantic error at file "examples-bad/validate_validate_int_expr_bad1.stan", line 2, characters 9-12:
Vector sizes should be of type int. Instead found type real.

$ ./../stanc.exe examples-bad/validate_validate_int_expr_bad10.stan
Semantic error at file "examples-bad/validate_validate_int_expr_bad10.stan", line 9, characters 24-27:
Matrix sizes should be of type int. Instead found type real.

$ ./../stanc.exe examples-bad/validate_validate_int_expr_bad11.stan
Semantic error at file "examples-bad/validate_validate_int_expr_bad11.stan", line 10, characters 22-25:
Matrix sizes should be of type int. Instead found type real.

$ ./../stanc.exe examples-bad/validate_validate_int_expr_bad12.stan
Semantic error at file "examples-bad/validate_validate_int_expr_bad12.stan", line 11, characters 13-16:
Matrix sizes should be of type int. Instead found type real.

$ ./../stanc.exe examples-bad/validate_validate_int_expr_bad13.stan
Semantic error at file "examples-bad/validate_validate_int_expr_bad13.stan", line 12, characters 14-17:
Matrix sizes should be of type int. Instead found type real.

$ ./../stanc.exe examples-bad/validate_validate_int_expr_bad2.stan
Semantic error at file "examples-bad/validate_validate_int_expr_bad2.stan", line 3, characters 13-16:
Row vector sizes should be of type int. Instead found type real.

$ ./../stanc.exe examples-bad/validate_validate_int_expr_bad3.stan
Semantic error at file "examples-bad/validate_validate_int_expr_bad3.stan", line 4, characters 9-12:
Matrix sizes should be of type int. Instead found type real.

$ ./../stanc.exe examples-bad/validate_validate_int_expr_bad4.stan
Semantic error at file "examples-bad/validate_validate_int_expr_bad4.stan", line 4, characters 11-14:
Matrix sizes should be of type int. Instead found type real.

$ ./../stanc.exe examples-bad/validate_validate_int_expr_bad5.stan
Semantic error at file "examples-bad/validate_validate_int_expr_bad5.stan", line 5, characters 14-17:
Vector sizes should be of type int. Instead found type real.

$ ./../stanc.exe examples-bad/validate_validate_int_expr_bad6.stan
Semantic error at file "examples-bad/validate_validate_int_expr_bad6.stan", line 6, characters 10-13:
Vector sizes should be of type int. Instead found type real.

$ ./../stanc.exe examples-bad/validate_validate_int_expr_bad7.stan
Semantic error at file "examples-bad/validate_validate_int_expr_bad7.stan", line 7, characters 10-13:
Vector sizes should be of type int. Instead found type real.

$ ./../stanc.exe examples-bad/validate_validate_int_expr_bad8.stan
Semantic error at file "examples-bad/validate_validate_int_expr_bad8.stan", line 8, characters 19-22:
Vector sizes should be of type int. Instead found type real.

$ ./../stanc.exe examples-bad/validate_validate_int_expr_bad9.stan
Semantic error at file "examples-bad/validate_validate_int_expr_bad9.stan", line 9, characters 22-25:
Matrix sizes should be of type int. Instead found type real.

$ ./../stanc.exe examples-bad/var-decl-bad-1.stan
Semantic error at file "examples-bad/var-decl-bad-1.stan", line 3, characters 2-18:
Non-data variables are not allowed in top level size declarations.

